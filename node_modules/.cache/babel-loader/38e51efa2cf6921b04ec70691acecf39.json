{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Movie/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Outlet } from \"react-router\";\nimport { fetchMovieID } from '../../api'; //import { InfoWrapper, Form, Button, Text } from \"./Searchbar.styled\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie(_ref) {\n  _s();\n\n  let {\n    movieID\n  } = _ref;\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovieID(url.search, query);\n        const Movie = data.results.map(_ref2 => {\n          let {\n            id,\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            overview,\n            genres\n          } = _ref2;\n          return {\n            id,\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            overview,\n            genres\n          };\n        });\n\n        if (foundMovies) {\n          setFoundMovies(foundMovies);\n        }\n      } catch (error) {\n        console.log(error.massage);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: poster_path,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [title, release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: vote_average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: genres.map(el => {\n        return el.name;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Movie, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","Outlet","fetchMovieID","Movie","movieID","fetchMovie","setIsLoading","data","url","search","query","results","map","id","poster_path","title","release_date","vote_average","overview","genres","foundMovies","setFoundMovies","error","console","log","massage","el","name"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Movie/Movie.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Outlet } from \"react-router\";\nimport { fetchMovieID } from '../../api'\n\n//import { InfoWrapper, Form, Button, Text } from \"./Searchbar.styled\";\nexport default function Movie({ movieID }) {\n\tuseEffect(() => {\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\tsetIsLoading(true);\n\t\t\t\tconst data = await fetchMovieID(url.search, query);\n\t\t\t\tconst Movie = data.results.map(({ id, poster_path, title, release_date, vote_average, overview, genres\n\t\t\t\t}) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tposter_path,\n\t\t\t\t\t\ttitle,\n\t\t\t\t\t\trelease_date,\n\t\t\t\t\t\tvote_average,\n\t\t\t\t\t\toverview,\n\t\t\t\t\t\tgenres\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tif (foundMovies) {\n\t\t\t\t\tsetFoundMovies(foundMovies);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.massage)\n\t\t\t} finally {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchMovie()\n\t}, [])\n\n\treturn (\n\t\t<div>\n\t\t\t<button>Go back</button>\n\t\t\t<img src={poster_path} alt=\"\" />\n\t\t\t<h2>{title}{release_date}</h2>\n\t\t\t<p>{vote_average}</p>\n\t\t\t<h3></h3>\n\t\t\t<p>{overview}</p>\n\t\t\t<h4></h4>\n\t\t\t<p>{genres.map(el => {\n\t\t\t\treturn el.name\n\t\t\t})}</p>\n\t\t</div>\n\n\t)\n\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B,C,CAEA;;;AACA,eAAe,SAASC,KAAT,OAA4B;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC1CJ,SAAS,CAAC,MAAM;IACf,eAAeK,UAAf,GAA4B;MAC3B,IAAI;QACHC,YAAY,CAAC,IAAD,CAAZ;QACA,MAAMC,IAAI,GAAG,MAAML,YAAY,CAACM,GAAG,CAACC,MAAL,EAAaC,KAAb,CAA/B;QACA,MAAMP,KAAK,GAAGI,IAAI,CAACI,OAAL,CAAaC,GAAb,CAAiB,SACzB;UAAA,IAD0B;YAAEC,EAAF;YAAMC,WAAN;YAAmBC,KAAnB;YAA0BC,YAA1B;YAAwCC,YAAxC;YAAsDC,QAAtD;YAAgEC;UAAhE,CAC1B;UACL,OAAO;YACNN,EADM;YAENC,WAFM;YAGNC,KAHM;YAINC,YAJM;YAKNC,YALM;YAMNC,QANM;YAONC;UAPM,CAAP;QASA,CAXa,CAAd;;QAaA,IAAIC,WAAJ,EAAiB;UAChBC,cAAc,CAACD,WAAD,CAAd;QACA;MACD,CAnBD,CAmBE,OAAOE,KAAP,EAAc;QACfC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACA,CArBD,SAqBU;QACTnB,YAAY,CAAC,KAAD,CAAZ;MACA;IACD;;IACDD,UAAU;EACV,CA5BQ,EA4BN,EA5BM,CAAT;EA8BA,oBACC;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC;MAAK,GAAG,EAAES,WAAV;MAAuB,GAAG,EAAC;IAA3B;MAAA;MAAA;MAAA;IAAA,QAFD,eAGC;MAAA,WAAKC,KAAL,EAAYC,YAAZ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHD,eAIC;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAJD,eAKC;MAAA;MAAA;MAAA;IAAA,QALD,eAMC;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAND,eAOC;MAAA;MAAA;MAAA;IAAA,QAPD,eAQC;MAAA,UAAIC,MAAM,CAACP,GAAP,CAAWc,EAAE,IAAI;QACpB,OAAOA,EAAE,CAACC,IAAV;MACA,CAFG;IAAJ;MAAA;MAAA;MAAA;IAAA,QARD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAgBA;;GA/CuBxB,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}