{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/pages/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\"; //import { Outlet } from \"react-router\";\n\nimport { fetchMovieID } from '../api';\nimport { Link, Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie() {\n  _s();\n\n  const [aboutMovie, setAboutMovie] = useState({});\n  const {\n    movieID\n  } = useParams();\n  useEffect(() => {\n    const url = `movie/${movieID}`;\n\n    async function fetchMovie() {\n      try {\n        //setIsLoading(true);\n        const aboutMovie = await fetchMovieID(url);\n        setAboutMovie(aboutMovie);\n      } catch (error) {\n        console.log(error.massage);\n      } finally {//setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movieID]);\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres\n  } = aboutMovie;\n  const path = 'https://image.tmdb.org/t/p/w300';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${path}${poster_path}`,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [title, \" (\", release_date, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User Score \", Math.floor(vote_average * 10), \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), genres.lenght && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: genres.map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", el.name]\n      }, el.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"cast\",\n          children: \"Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"reviews\",\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        movieID\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Movie, \"fL5EoTsrbS/vekQ2P2ZEhsMV72c=\", false, function () {\n  return [useParams];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchMovieID","Link","Outlet","Movie","aboutMovie","setAboutMovie","movieID","url","fetchMovie","error","console","log","massage","poster_path","title","release_date","vote_average","overview","genres","path","Math","floor","lenght","map","el","name","id"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/pages/Movie.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n//import { Outlet } from \"react-router\";\nimport { fetchMovieID } from '../api'\nimport { Link, Outlet } from \"react-router-dom\";\n\nexport default function Movie() {\n\tconst [aboutMovie, setAboutMovie] = useState({})\n\tconst { movieID } = useParams()\n\tuseEffect(() => {\n\t\tconst url = `movie/${movieID}`\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\t//setIsLoading(true);\n\t\t\t\tconst aboutMovie = await fetchMovieID(url);\n\t\t\t\tsetAboutMovie(aboutMovie)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.massage)\n\t\t\t} finally {\n\t\t\t\t//setIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchMovie()\n\t}, [movieID])\n\n\tconst { poster_path, title, release_date, vote_average, overview, genres } = aboutMovie\n\n\tconst path = 'https://image.tmdb.org/t/p/w300'\n\treturn (\n\n\t\t<div>\n\t\t\t<button>Go back</button>\n\t\t\t{poster_path && <img src={`${path}${poster_path}`} alt=\"\" />}\n\n\t\t\t<h2>{title} ({release_date})</h2>\n\t\t\t<p>User Score {Math.floor(vote_average * 10)}%</p>\n\t\t\t<h3>Overview</h3>\n\t\t\t<p>{overview}</p>\n\t\t\t<h4>Genres</h4>\n\t\t\t{genres.lenght && <div>{genres.map(el => (\n\t\t\t\t<span key={el.id}> {el.name}</span>\n\t\t\t))}</div>}\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"cast\">Cast</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to=\"reviews\">Reviews</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Outlet context={{ movieID }} />\n\t\t</div >\n\n\t)\n\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CACA;;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAC/B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM;IAAEQ;EAAF,IAAcP,SAAS,EAA7B;EACAF,SAAS,CAAC,MAAM;IACf,MAAMU,GAAG,GAAI,SAAQD,OAAQ,EAA7B;;IACA,eAAeE,UAAf,GAA4B;MAC3B,IAAI;QACH;QACA,MAAMJ,UAAU,GAAG,MAAMJ,YAAY,CAACO,GAAD,CAArC;QACAF,aAAa,CAACD,UAAD,CAAb;MACA,CAJD,CAIE,OAAOK,KAAP,EAAc;QACfC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACA,CAND,SAMU,CACT;MACA;IACD;;IACDJ,UAAU;EACV,CAdQ,EAcN,CAACF,OAAD,CAdM,CAAT;EAgBA,MAAM;IAAEO,WAAF;IAAeC,KAAf;IAAsBC,YAAtB;IAAoCC,YAApC;IAAkDC,QAAlD;IAA4DC;EAA5D,IAAuEd,UAA7E;EAEA,MAAMe,IAAI,GAAG,iCAAb;EACA,oBAEC;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,EAEEN,WAAW,iBAAI;MAAK,GAAG,EAAG,GAAEM,IAAK,GAAEN,WAAY,EAAhC;MAAmC,GAAG,EAAC;IAAvC;MAAA;MAAA;MAAA;IAAA,QAFjB,eAIC;MAAA,WAAKC,KAAL,QAAcC,YAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAJD,eAKC;MAAA,0BAAeK,IAAI,CAACC,KAAL,CAAWL,YAAY,GAAG,EAA1B,CAAf;IAAA;MAAA;MAAA;MAAA;IAAA,QALD,eAMC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAND,eAOC;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QAPD,eAQC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARD,EASEC,MAAM,CAACI,MAAP,iBAAiB;MAAA,UAAMJ,MAAM,CAACK,GAAP,CAAWC,EAAE,iBACpC;QAAA,gBAAoBA,EAAE,CAACC,IAAvB;MAAA,GAAWD,EAAE,CAACE,EAAd;QAAA;QAAA;QAAA;MAAA,QADuB;IAAN;MAAA;MAAA;MAAA;IAAA,QATnB,eAYC;MAAA,wBACC;QAAA,uBACC,QAAC,IAAD;UAAM,EAAE,EAAC,MAAT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QADD,eAIC;QAAA,uBACC,QAAC,IAAD;UAAM,EAAE,EAAC,SAAT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;MAAA;MAAA;MAAA;IAAA,QAZD,eAoBC,QAAC,MAAD;MAAQ,OAAO,EAAE;QAAEpB;MAAF;IAAjB;MAAA;MAAA;MAAA;IAAA,QApBD;EAAA;IAAA;IAAA;IAAA;EAAA,QAFD;AA2BA;;GAjDuBH,K;UAEHJ,S;;;KAFGI,K"},"metadata":{},"sourceType":"module"}