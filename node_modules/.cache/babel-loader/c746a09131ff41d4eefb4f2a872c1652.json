{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'https://pixabay.com/api/'; //axios.defaults.headers.common['key'] = process.env.REACT_APP_API_KEY;\n\nexport const fetchImages = async () => {\n  try {\n    const response = await axios.get('https://pixabay.com/api/', {\n      params: {\n        key: '30718991-276e8f59eb65e473510905548',\n        q: 'cat'\n      }\n    });\n  } catch {\n    'Не удалось загрузить ';\n  } finally {}\n\n  return response.data;\n}; // export const fetchDogByBreed = async (breedId) => {\n// \tconst response = await axios.get('/images/search', {\n// \t\tparams: { breed_id: breedId },\n// \t});\n// \tconsole.log(response.data[0])\n// \treturn response.data[0];\n// };","map":{"version":3,"names":["axios","defaults","baseURL","fetchImages","response","get","params","key","q","data"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module3 /src/api.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n//axios.defaults.headers.common['key'] = process.env.REACT_APP_API_KEY;\n\nexport const fetchImages = async () => {\n\ttry {\n\t\tconst response = await axios.get('https://pixabay.com/api/', {\n\t\t\tparams: {\n\t\t\t\tkey: '30718991-276e8f59eb65e473510905548',\n\t\t\t\tq: 'cat'\n\t\t\t}\n\t\t})\n\t} catch {\n\t\t'Не удалось загрузить '\n\t} finally {\n\n\t}\n\treturn response.data;\n};\n\n\n\n\n\n// export const fetchDogByBreed = async (breedId) => {\n// \tconst response = await axios.get('/images/search', {\n// \t\tparams: { breed_id: breedId },\n// \t});\n// \tconsole.log(response.data[0])\n// \treturn response.data[0];\n// };"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,0BAAzB,C,CACA;;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAY;EACtC,IAAI;IACH,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,0BAAV,EAAsC;MAC5DC,MAAM,EAAE;QACPC,GAAG,EAAE,oCADE;QAEPC,CAAC,EAAE;MAFI;IADoD,CAAtC,CAAvB;EAMA,CAPD,CAOE,MAAM;IACP;EACA,CATD,SASU,CAET;;EACD,OAAOJ,QAAQ,CAACK,IAAhB;AACA,CAdM,C,CAoBP;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}