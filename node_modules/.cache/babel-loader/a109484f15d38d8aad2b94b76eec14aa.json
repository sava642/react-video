{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingToday, fetchSearchMovies } from 'api'; //import { Loader } from \"../components/Loader/Loader\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Routes } from \"react-router-dom\";\nimport { Home } from \"../pages/Home\";\nimport { Container, Header, Logo, Link } from \"./App.styled\";\nimport Movies from '../pages/Movies';\nimport Movie from '../pages/Movie';\nimport { Cast } from './Cast/Cast';\nimport { Reviews } from './Reviews/Reviews';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [foundMovies, setFoundMovies] = useState([]);\n  const url = {\n    trending: 'trending/movie/day',\n    search: 'search/movie' // / movie / { movie_id }\n    // / movie / { movie_id } / credits\n    // / movie / { movie_id } / reviews\n\n  };\n  useEffect(() => {\n    async function fetchTrending() {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingToday(url.trending);\n        const trendsMovies = data.results.map(_ref => {\n          let {\n            id,\n            title\n          } = _ref;\n          return {\n            id,\n            title\n          };\n        });\n\n        if (trendsMovies) {\n          setTrends(trendsMovies);\n        } // if (imgs.length) {\n        //   setImages(images => [...images, ...imgs]);\n        //   setisBtn(true);\n        // }\n        // if (imgs.length === 0) {\n        //   toast('По вашему запросу картинок не найдено');\n        //   setIsLoading(false);\n        //   setisBtn(false);\n        //   return\n        // }\n        // if (imgs.length < 12) {\n        //   setIsLoading(false);\n        //   toast('Картинок больше нет');\n        //   setisBtn(false);\n        //   return\n        // }\n        // if (page === 1) {\n        //   toast(` Мы нашли  ${data.totalHits} картинок.`);\n        // }\n\n      } catch (error) {\n        toast(error.massage);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchTrending();\n  }, [url.trending]);\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    }\n\n    async function fetchSearch() {\n      try {\n        setIsLoading(true);\n        const data = await fetchSearchMovies(url.search, query);\n        const foundMovies = data.results.map(_ref2 => {\n          let {\n            id,\n            title,\n            backdrop_path,\n            poster_path\n          } = _ref2;\n          return {\n            id,\n            title,\n            backdrop_path,\n            poster_path\n          };\n        });\n\n        if (foundMovies) {\n          setFoundMovies(foundMovies);\n        }\n      } catch (error) {\n        toast(error.massage);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchSearch();\n  }, [query, url.search]); // const toggleModal = () => {\n  //   setShowModal(!showModal);\n  // }\n\n  const getQueryValue = value => {\n    if (value === \"\") {\n      setQuery(value); // setPage(1);\n\n      toast('Впишите значение поиска');\n      return;\n    }\n\n    setQuery(value); //setFoundMovies([])\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      autoClose: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          end: true,\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies\",\n          children: \"Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          trends: trends\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies\",\n        element: /*#__PURE__*/_jsxDEV(Movies, {\n          onSearch: getQueryValue,\n          foundMovies: foundMovies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:movieID\",\n        element: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 49\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"cast\",\n          element: /*#__PURE__*/_jsxDEV(Cast, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"reviews\",\n          element: /*#__PURE__*/_jsxDEV(Reviews, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hkiKAjEFHqOe7Dx+OMQSVhyEuLI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","fetchTrendingToday","fetchSearchMovies","ToastContainer","toast","Route","Routes","Home","Container","Header","Logo","Link","Movies","Movie","Cast","Reviews","App","trends","setTrends","isLoading","setIsLoading","query","setQuery","foundMovies","setFoundMovies","url","trending","search","fetchTrending","data","trendsMovies","results","map","id","title","error","massage","fetchSearch","backdrop_path","poster_path","getQueryValue","value"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchTrendingToday, fetchSearchMovies } from 'api';\n//import { Loader } from \"../components/Loader/Loader\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Route, Routes } from \"react-router-dom\";\nimport { Home } from \"../pages/Home\";\nimport { Container, Header, Logo, Link } from \"./App.styled\";\nimport Movies from '../pages/Movies'\nimport Movie from '../pages/Movie'\nimport { Cast } from './Cast/Cast'\nimport { Reviews } from './Reviews/Reviews';\n\n\nexport default function App() {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [foundMovies, setFoundMovies] = useState([])\n\n\n  const url = {\n    trending: 'trending/movie/day',\n    search: 'search/movie'\n    // / movie / { movie_id }\n    // / movie / { movie_id } / credits\n    // / movie / { movie_id } / reviews\n  }\n\n\n  useEffect(() => {\n    async function fetchTrending() {\n      try {\n        setIsLoading(true);\n        const data = await fetchTrendingToday(url.trending);\n        const trendsMovies = data.results.map(({ id, title\n        }) => {\n          return {\n            id,\n            title,\n          };\n        });\n\n        if (trendsMovies) {\n          setTrends(trendsMovies);\n        }\n\n\n        // if (imgs.length) {\n        //   setImages(images => [...images, ...imgs]);\n        //   setisBtn(true);\n        // }\n        // if (imgs.length === 0) {\n        //   toast('По вашему запросу картинок не найдено');\n        //   setIsLoading(false);\n        //   setisBtn(false);\n        //   return\n        // }\n        // if (imgs.length < 12) {\n        //   setIsLoading(false);\n        //   toast('Картинок больше нет');\n        //   setisBtn(false);\n        //   return\n        // }\n        // if (page === 1) {\n        //   toast(` Мы нашли  ${data.totalHits} картинок.`);\n        // }\n\n      } catch (error) {\n        toast(error.massage)\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTrending()\n\n  }, [url.trending])\n\n  useEffect(() => {\n    if (query === \"\") {\n      return;\n    }\n    async function fetchSearch() {\n      try {\n        setIsLoading(true);\n        const data = await fetchSearchMovies(url.search, query);\n        const foundMovies = data.results.map(({ id, title, backdrop_path, poster_path\n        }) => {\n          return {\n            id,\n            title,\n            backdrop_path,\n            poster_path,\n          };\n        });\n\n        if (foundMovies) {\n          setFoundMovies(foundMovies);\n        }\n      } catch (error) {\n        toast(error.massage)\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchSearch()\n\n  }, [query, url.search])\n\n  // const toggleModal = () => {\n  //   setShowModal(!showModal);\n  // }\n\n  const getQueryValue = (value) => {\n    if (value === \"\") {\n      setQuery(value)\n      // setPage(1);\n      toast('Впишите значение поиска')\n      return;\n    }\n    setQuery(value);\n    //setFoundMovies([])\n\n\n  }\n  return (\n    <Container>\n      <ToastContainer autoClose={2000} />\n      <Header>\n        <nav>\n          <Link to=\"/\" end>\n            Home\n          </Link>\n          <Link to=\"/movies\">Movies</Link>\n        </nav>\n      </Header>\n      <Routes>\n        <Route path=\"/\" element={<Home trends={trends} />} />\n        <Route path=\"/movies\" element={<Movies onSearch={getQueryValue} foundMovies={foundMovies} />} />\n        <Route path=\"/movies/:movieID\" element={<Movie />} >\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Route>\n        <Route path=\"*\" element={<div>Not found</div>} />\n      </Routes>\n    </Container>\n  );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}