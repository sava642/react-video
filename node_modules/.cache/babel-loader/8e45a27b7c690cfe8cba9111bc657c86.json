{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module2/src/components/App.js\";\nimport { Recipe } from './Recipe/Recipe';\nimport recipes from '../recepies.json';\nimport Statistics from './Statistics/Statistics';\nimport React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n      total: 0,\n      feedback: 100\n    };\n\n    this.handleAmount = e => {\n      let el = e.target.innerHTML.toLowerCase();\n      this.setState(prevState => ({\n        [el]: prevState[el] + 1\n      }), this.countTotalFeedback);\n    };\n\n    this.countTotalFeedback = () => {\n      this.setState({\n        total: this.state.good + this.state.neutral + this.state.bad\n      }, this.countPositiveFeedbackPercentage);\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      this.setState({\n        feedback: Math.floor(this.state.good / this.state.total * 100)\n      });\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad,\n      total,\n      feedback\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feetback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FeedbackOptions // options={ }\n      , {\n        onLeaveFeedback: this.handleAmount,\n        onCountTotalFeedback: this.countTotalFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        feedback: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Notification, {\n        message: \"There is no feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), recipes.map((recipe, idx) => /*#__PURE__*/_jsxDEV(Recipe, {\n        recipe: recipe\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module2/src/components/App.js"],"names":["Recipe","recipes","Statistics","React","Component","FeedbackOptions","Section","Notification","App","state","good","neutral","bad","total","feedback","handleAmount","e","el","target","innerHTML","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","render","map","recipe","idx"],"mappings":";AACA,SAASA,MAAT,QAAuB,iBAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACPC,MAAAA,IAAI,EAAE,CADC;AAEPC,MAAAA,OAAO,EAAE,CAFF;AAGPC,MAAAA,GAAG,EAAE,CAHE;AAIPC,MAAAA,KAAK,EAAE,CAJA;AAKPC,MAAAA,QAAQ,EAAE;AALH,KADmB;;AAAA,SAQ3BC,YAR2B,GAQXC,CAAD,IAAO;AACrB,UAAIC,EAAE,GAAGD,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,WAAnB,EAAT;AACA,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC7B,SAACL,EAAD,GAAMK,SAAS,CAACL,EAAD,CAAT,GAAgB;AADO,OAAhB,CAAd,EAEI,KAAKM,kBAFT;AAGA,KAb0B;;AAAA,SAiB3BA,kBAjB2B,GAiBN,MAAM;AAC1B,WAAKF,QAAL,CAAc;AACbR,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG;AAD5C,OAAd,EAEG,KAAKY,+BAFR;AAGA,KArB0B;;AAAA,SAuB3BA,+BAvB2B,GAuBO,MAAM;AACvC,WAAKH,QAAL,CAAc;AACbP,QAAAA,QAAQ,EAAEW,IAAI,CAACC,KAAL,CAAW,KAAKjB,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWI,KAA7B,GAAqC,GAAhD;AADG,OAAd;AAGA,KA3B0B;AAAA;;AA+B3Bc,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEjB,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAA0C,KAAKL,KAArD;AAEA,wBACC;AAAA,8BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,eAAD,CACC;AADD;AAEC,QAAA,eAAe,EAAE,KAAKM,YAFvB;AAGC,QAAA,oBAAoB,EAAE,KAAKQ;AAH5B;AAAA;AAAA;AAAA;AAAA,cAJD,eASC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cATD,eAYC,QAAC,UAAD;AACC,QAAA,IAAI,EAAEb,IADP;AAEC,QAAA,OAAO,EAAEC,OAFV;AAGC,QAAA,GAAG,EAAEC,GAHN;AAIC,QAAA,KAAK,EAAEC,KAJR;AAKC,QAAA,QAAQ,EAAEC;AALX;AAAA;AAAA;AAAA;AAAA,cAZD,eAmBC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAnBD,EAyBEb,OAAO,CAAC2B,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACX,QAAC,MAAD;AAAkB,QAAA,MAAM,EAAED;AAA1B,SAAaC,GAAb;AAAA;AAAA;AAAA;AAAA,cADD,CAzBF;AAAA,oBADD;AAgCA;;AAlE0B;;AAmE3B;AACD,eAAetB,GAAf","sourcesContent":["\nimport { Recipe } from './Recipe/Recipe';\nimport recipes from '../recepies.json';\nimport Statistics from './Statistics/Statistics';\nimport React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\n\nclass App extends Component {\n\tstate = {\n\t\tgood: 0,\n\t\tneutral: 0,\n\t\tbad: 0,\n\t\ttotal: 0,\n\t\tfeedback: 100,\n\t}\n\thandleAmount = (e) => {\n\t\tlet el = e.target.innerHTML.toLowerCase();\n\t\tthis.setState((prevState) => ({\n\t\t\t[el]: prevState[el] + 1,\n\t\t}), this.countTotalFeedback)\n\t}\n\n\n\n\tcountTotalFeedback = () => {\n\t\tthis.setState({\n\t\t\ttotal: this.state.good + this.state.neutral + this.state.bad,\n\t\t}, this.countPositiveFeedbackPercentage)\n\t}\n\n\tcountPositiveFeedbackPercentage = () => {\n\t\tthis.setState({\n\t\t\tfeedback: Math.floor(this.state.good / this.state.total * 100),\n\t\t})\n\t}\n\n\n\n\trender() {\n\t\tconst { good, neutral, bad, total, feedback } = this.state\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Section title=\"Please leave feetback\">\n\n\t\t\t\t</Section>\n\t\t\t\t<FeedbackOptions\n\t\t\t\t\t// options={ }\n\t\t\t\t\tonLeaveFeedback={this.handleAmount}\n\t\t\t\t\tonCountTotalFeedback={this.countTotalFeedback}\n\t\t\t\t/>\n\t\t\t\t<Section title=\"Statistic\">\n\n\t\t\t\t</Section>\n\t\t\t\t<Statistics\n\t\t\t\t\tgood={good}\n\t\t\t\t\tneutral={neutral}\n\t\t\t\t\tbad={bad}\n\t\t\t\t\ttotal={total}\n\t\t\t\t\tfeedback={feedback}\n\t\t\t\t/>\n\t\t\t\t<Notification message=\"There is no feedback\"></Notification>\n\n\n\n\n\t\t\t\t{\n\t\t\t\t\trecipes.map((recipe, idx) => (\n\t\t\t\t\t\t<Recipe key={idx} recipe={recipe} />\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</>\n\t\t);\n\t}\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}