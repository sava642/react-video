{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Reviews/Reviews.jsx\",\n    _s = $RefreshSig$();\n\nimport { useOutletContext } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchMovieIDReviews } from 'api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reviews = () => {\n  _s();\n\n  const [author, setAuthor] = useState('');\n  const [content, setContent] = useState('');\n  const [contentRewiews, setContentRewiews] = useState([]);\n  const {\n    movieID\n  } = useOutletContext();\n  useEffect(() => {\n    const url = `movie/${movieID}/reviews`;\n\n    async function fetchMovie() {\n      try {\n        const reviews = await fetchMovieIDReviews(url);\n\n        if (reviews.results) {\n          const contentRewiews = reviews.results.map(_ref => {\n            let {\n              author,\n              content\n            } = _ref;\n            return {\n              author,\n              content\n            };\n          });\n          setContentRewiews(contentRewiews);\n        }\n\n        setAuthor(reviews.results[0].author);\n        setContent(reviews.results[0].content);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovie();\n  }, [movieID]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Author: \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Not reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Reviews, \"NNpjGorl0e7gWtAh3lkGOPb6FMk=\", false, function () {\n  return [useOutletContext];\n});\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["useOutletContext","useState","useEffect","fetchMovieIDReviews","Reviews","author","setAuthor","content","setContent","contentRewiews","setContentRewiews","movieID","url","fetchMovie","reviews","results","map","error","console","log"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Reviews/Reviews.jsx"],"sourcesContent":["import { useOutletContext } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchMovieIDReviews } from 'api';\n\n\nexport const Reviews = () => {\n\tconst [author, setAuthor] = useState('')\n\tconst [content, setContent] = useState('')\n\tconst [contentRewiews, setContentRewiews] = useState([])\n\n\n\tconst { movieID } = useOutletContext();\n\n\tuseEffect(() => {\n\t\tconst url = `movie/${movieID}/reviews`\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\tconst reviews = await fetchMovieIDReviews(url);\n\n\t\t\t\tif (reviews.results) {\n\t\t\t\t\tconst contentRewiews = reviews.results.map(({ author, content }) => {\n\t\t\t\t\t\treturn { author, content };\n\t\t\t\t\t});\n\t\t\t\t\tsetContentRewiews(contentRewiews)\n\t\t\t\t}\n\n\t\t\t\tsetAuthor(reviews.results[0].author)\n\t\t\t\tsetContent(reviews.results[0].content)\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcatch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t}\n\t\t}\n\t\tfetchMovie()\n\t}, [movieID])\n\n\treturn (\n\t\t<section>\n\t\t\t{true ?\n\t\t\t\t(<div>\n\t\t\t\t\t<h2>Author: {author}</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</p>\n\t\t\t\t</div>)\n\t\t\t\t:\n\t\t\t\t(<p>Not reviews</p>)\n\t\t\t}\n\t\t</section>\n\t);\n};"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,KAApC;;AAGA,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;EAGA,MAAM;IAAEU;EAAF,IAAcX,gBAAgB,EAApC;EAEAE,SAAS,CAAC,MAAM;IACf,MAAMU,GAAG,GAAI,SAAQD,OAAQ,UAA7B;;IACA,eAAeE,UAAf,GAA4B;MAC3B,IAAI;QACH,MAAMC,OAAO,GAAG,MAAMX,mBAAmB,CAACS,GAAD,CAAzC;;QAEA,IAAIE,OAAO,CAACC,OAAZ,EAAqB;UACpB,MAAMN,cAAc,GAAGK,OAAO,CAACC,OAAR,CAAgBC,GAAhB,CAAoB,QAAyB;YAAA,IAAxB;cAAEX,MAAF;cAAUE;YAAV,CAAwB;YACnE,OAAO;cAAEF,MAAF;cAAUE;YAAV,CAAP;UACA,CAFsB,CAAvB;UAGAG,iBAAiB,CAACD,cAAD,CAAjB;QACA;;QAEDH,SAAS,CAACQ,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBV,MAApB,CAAT;QACAG,UAAU,CAACM,OAAO,CAACC,OAAR,CAAgB,CAAhB,EAAmBR,OAApB,CAAV;QACA;MACA,CAbD,CAeA,OAAOU,KAAP,EAAc;QACbC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACA;IACD;;IACDJ,UAAU;EACV,CAvBQ,EAuBN,CAACF,OAAD,CAvBM,CAAT;EAyBA,oBACC;IAAA,UACE,oBACC;MAAA,wBACA;QAAA,uBAAaN,MAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAA,UACEE;MADF;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAQC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EATH;IAAA;IAAA;IAAA;EAAA,QADD;AAcA,CA/CM;;GAAMH,O;UAMQJ,gB;;;KANRI,O"},"metadata":{},"sourceType":"module"}