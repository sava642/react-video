{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Cast/Cast.jsx\",\n    _s = $RefreshSig$();\n\nimport { useOutletContext } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchMovieIDCredits } from 'api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cast = () => {\n  _s();\n\n  const [cast, setCast] = useState([]);\n  const {\n    movieID\n  } = useOutletContext();\n  useEffect(() => {\n    const url = `movie/${movieID}/credits`;\n\n    async function fetchMovie() {\n      try {\n        //setIsLoading(true);\n        const credits = await fetchMovieIDCredits(url);\n        setCast(credits.cast);\n      } catch (error) {\n        console.log(error.massage);\n      } finally {//setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movieID]);\n  console.log(cast);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cast.map(_ref => {\n        let {\n          cast_id,\n          name,\n          character,\n          profile_path\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 7\n          }, this)\n        }, cast_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Cast, \"Vplj5++/sSR5GWcofktX7XU5PBo=\", false, function () {\n  return [useOutletContext];\n});\n\n_c = Cast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["useOutletContext","useState","useEffect","fetchMovieIDCredits","Cast","cast","setCast","movieID","url","fetchMovie","credits","error","console","log","massage","map","cast_id","name","character","profile_path"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/Cast/Cast.jsx"],"sourcesContent":["import { useOutletContext } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchMovieIDCredits } from 'api';\n\nexport const Cast = () => {\n\tconst [cast, setCast] = useState([])\n\n\tconst { movieID } = useOutletContext();\n\n\tuseEffect(() => {\n\t\tconst url = `movie/${movieID}/credits`\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\t//setIsLoading(true);\n\t\t\t\tconst credits = await fetchMovieIDCredits(url);\n\t\t\t\tsetCast(credits.cast)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.massage)\n\t\t\t} finally {\n\t\t\t\t//setIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchMovie()\n\t}, [movieID])\n\tconsole.log(cast)\n\treturn (\n\t\t<section>\n\t\t\t<div>\n\t\t\t\t{cast.map(({ cast_id, name, character, profile_path }) => (\n\t\t\t\t\t<ul key={cast_id}>\n\n\t\t\t\t\t\t<li>{name}</li>\n\n\t\t\t\t\t</ul>))}\n\t\t\t</div>\n\t\t</section>\n\t);\n};"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,KAApC;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAM;IAAEM;EAAF,IAAcP,gBAAgB,EAApC;EAEAE,SAAS,CAAC,MAAM;IACf,MAAMM,GAAG,GAAI,SAAQD,OAAQ,UAA7B;;IACA,eAAeE,UAAf,GAA4B;MAC3B,IAAI;QACH;QACA,MAAMC,OAAO,GAAG,MAAMP,mBAAmB,CAACK,GAAD,CAAzC;QACAF,OAAO,CAACI,OAAO,CAACL,IAAT,CAAP;MACA,CAJD,CAIE,OAAOM,KAAP,EAAc;QACfC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACA,CAND,SAMU,CACT;MACA;IACD;;IACDL,UAAU;EACV,CAdQ,EAcN,CAACF,OAAD,CAdM,CAAT;EAeAK,OAAO,CAACC,GAAR,CAAYR,IAAZ;EACA,oBACC;IAAA,uBACC;MAAA,UACEA,IAAI,CAACU,GAAL,CAAS;QAAA,IAAC;UAAEC,OAAF;UAAWC,IAAX;UAAiBC,SAAjB;UAA4BC;QAA5B,CAAD;QAAA,oBACT;UAAA,uBAEC;YAAA,UAAKF;UAAL;YAAA;YAAA;YAAA;UAAA;QAFD,GAASD,OAAT;UAAA;UAAA;UAAA;QAAA,QADS;MAAA,CAAT;IADF;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAYA,CAjCM;;GAAMZ,I;UAGQJ,gB;;;KAHRI,I"},"metadata":{},"sourceType":"module"}