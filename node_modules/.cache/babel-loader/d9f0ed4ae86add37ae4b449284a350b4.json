{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/MovieDetails/MovieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMovieID } from '../../api';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container, Wrapper, FlexItem, AddInfo, Img } from './MovieDetails.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails() {\n  _s();\n\n  const [aboutMovie, setAboutMovie] = useState({});\n  const {\n    movieID\n  } = useParams();\n  useEffect(() => {\n    const url = `movie/${movieID}`;\n\n    async function fetchMovie() {\n      try {\n        //setIsLoading(true);\n        const aboutMovie = await fetchMovieID(url);\n        setAboutMovie(aboutMovie);\n      } catch (error) {\n        console.log(error.massage);\n      } finally {//setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, [movieID]);\n  const {\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres\n  } = aboutMovie;\n  const path = 'https://image.tmdb.org/t/p/w400';\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        children: poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${path}${poster_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FlexItem, {\n        children: [release_date && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [title, \" (\", release_date.slice(0, 4), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User Score \", Math.floor(vote_average * 10), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Genres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), genres && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: genres.map(el => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", el.name]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AddInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Additional information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"cast\",\n            children: \"Cast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"reviews\",\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n      context: {\n        movieID\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(MovieDetails, \"fL5EoTsrbS/vekQ2P2ZEhsMV72c=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchMovieID","Link","Outlet","Container","Wrapper","FlexItem","AddInfo","Img","MovieDetails","aboutMovie","setAboutMovie","movieID","url","fetchMovie","error","console","log","massage","poster_path","title","release_date","vote_average","overview","genres","path","slice","Math","floor","map","el","name","id"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module5.task1/src/components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchMovieID } from '../../api'\nimport { Link, Outlet } from 'react-router-dom';\nimport { Container, Wrapper, FlexItem, AddInfo, Img } from './MovieDetails.styled'\n\n\nexport default function MovieDetails() {\n\tconst [aboutMovie, setAboutMovie] = useState({})\n\tconst { movieID } = useParams()\n\tuseEffect(() => {\n\t\tconst url = `movie/${movieID}`\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\t//setIsLoading(true);\n\t\t\t\tconst aboutMovie = await fetchMovieID(url);\n\t\t\t\tsetAboutMovie(aboutMovie)\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error.massage)\n\t\t\t} finally {\n\t\t\t\t//setIsLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchMovie()\n\t}, [movieID])\n\n\tconst { poster_path, title, release_date, vote_average, overview, genres } = aboutMovie\n\n\tconst path = 'https://image.tmdb.org/t/p/w400'\n\treturn (\n\n\t\t<Container>\n\t\t\t<button>Go back</button>\n\t\t\t<Wrapper>\n\t\t\t\t<Img>\n\t\t\t\t\t{poster_path && <img src={`${path}${poster_path}`} alt=\"\" />}\n\t\t\t\t</Img>\n\t\t\t\t<FlexItem>\n\t\t\t\t\t{release_date && <h2>{title} ({release_date.slice(0, 4)})</h2>}\n\t\t\t\t\t<p>User Score {Math.floor(vote_average * 10)}%</p>\n\t\t\t\t\t<h3>Overview</h3>\n\t\t\t\t\t<p>{overview}</p>\n\t\t\t\t\t<h4>Genres</h4>\n\t\t\t\t\t{genres && <div>{genres.map(el => (\n\t\t\t\t\t\t<span key={el.id}> {el.name}</span>\n\t\t\t\t\t))}</div>}\n\t\t\t\t</FlexItem>\n\t\t\t</Wrapper>\n\n\n\t\t\t<AddInfo>\n\t\t\t\t<p>Additional information</p>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"cast\">Cast</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"reviews\">Reviews</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</AddInfo>\n\n\t\t\t<Outlet context={{ movieID }} />\n\t\t</Container >\n\t)\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,OAAvC,EAAgDC,GAAhD,QAA2D,uBAA3D;;AAGA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACtC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM;IAAEa;EAAF,IAAcZ,SAAS,EAA7B;EACAF,SAAS,CAAC,MAAM;IACf,MAAMe,GAAG,GAAI,SAAQD,OAAQ,EAA7B;;IACA,eAAeE,UAAf,GAA4B;MAC3B,IAAI;QACH;QACA,MAAMJ,UAAU,GAAG,MAAMT,YAAY,CAACY,GAAD,CAArC;QACAF,aAAa,CAACD,UAAD,CAAb;MACA,CAJD,CAIE,OAAOK,KAAP,EAAc;QACfC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACA,CAND,SAMU,CACT;MACA;IACD;;IACDJ,UAAU;EACV,CAdQ,EAcN,CAACF,OAAD,CAdM,CAAT;EAgBA,MAAM;IAAEO,WAAF;IAAeC,KAAf;IAAsBC,YAAtB;IAAoCC,YAApC;IAAkDC,QAAlD;IAA4DC;EAA5D,IAAuEd,UAA7E;EAEA,MAAMe,IAAI,GAAG,iCAAb;EACA,oBAEC,QAAC,SAAD;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAEC,QAAC,OAAD;MAAA,wBACC,QAAC,GAAD;QAAA,UACEN,WAAW,iBAAI;UAAK,GAAG,EAAG,GAAEM,IAAK,GAAEN,WAAY,EAAhC;UAAmC,GAAG,EAAC;QAAvC;UAAA;UAAA;UAAA;QAAA;MADjB;QAAA;QAAA;QAAA;MAAA,QADD,eAIC,QAAC,QAAD;QAAA,WACEE,YAAY,iBAAI;UAAA,WAAKD,KAAL,QAAcC,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAd;QAAA;UAAA;UAAA;UAAA;QAAA,QADlB,eAEC;UAAA,0BAAeC,IAAI,CAACC,KAAL,CAAWN,YAAY,GAAG,EAA1B,CAAf;QAAA;UAAA;UAAA;UAAA;QAAA,QAFD,eAGC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHD,eAIC;UAAA,UAAIC;QAAJ;UAAA;UAAA;UAAA;QAAA,QAJD,eAKC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALD,EAMEC,MAAM,iBAAI;UAAA,UAAMA,MAAM,CAACK,GAAP,CAAWC,EAAE,iBAC7B;YAAA,gBAAoBA,EAAE,CAACC,IAAvB;UAAA,GAAWD,EAAE,CAACE,EAAd;YAAA;YAAA;YAAA;UAAA,QADgB;QAAN;UAAA;UAAA;UAAA;QAAA,QANZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,eAmBC,QAAC,OAAD;MAAA,wBACC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAEC;QAAA,wBACC;UAAA,uBACC,QAAC,IAAD;YAAM,EAAE,EAAC,MAAT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QADD,eAIC;UAAA,uBACC,QAAC,IAAD;YAAM,EAAE,EAAC,SAAT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAJD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBD,eA+BC,QAAC,MAAD;MAAQ,OAAO,EAAE;QAAEpB;MAAF;IAAjB;MAAA;MAAA;MAAA;IAAA,QA/BD;EAAA;IAAA;IAAA;IAAA;EAAA,QAFD;AAoCA;;GA1DuBH,Y;UAEHT,S;;;KAFGS,Y"},"metadata":{},"sourceType":"module"}