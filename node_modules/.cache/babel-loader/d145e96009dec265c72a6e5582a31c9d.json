{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/React.projects/React.goit-module3 /src/components/App.jsx\";\nimport React from \"react\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport { Component } from 'react';\nimport { fetchImages } from 'api';\nimport { ImageGallary } from './ImageGallery/ImageGallary';\nimport { Wrapper } from \"./App.styled\";\nimport { ButtonLoadMore } from '../components/Button/Button';\nimport { Loader } from \"../components/Loader/Loader\";\nimport Modal from \"./Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      images: [],\n      error: '',\n      isLoading: false,\n      showModal: false,\n      search: '',\n      page: 1,\n      activImg: ''\n    };\n\n    this.toggleModal = () => {\n      this.setState(_ref => {\n        let {\n          showModal\n        } = _ref;\n        return {\n          showModal: !showModal\n        };\n      });\n    };\n\n    this.getVisiblImages = value => {\n      this.setState({\n        search: value\n      });\n    };\n\n    this.handleModal = url => {\n      this.setState({\n        activImg: url\n      });\n    };\n\n    this.loadMore = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n  }\n\n  // async componentDidMount() {\n  //   try {\n  //     this.setState({ isLoading: true });\n  //     const images = await fetchImages();\n  //     this.setState({\n  //       images: images.hits,\n  //       isLoading: false,\n  //     });\n  //   } catch (error) {\n  //     this.setState({\n  //       error:\n  //         'Мы не смогли загрузить картинки, пожалуйста перезагрузите страницу чтобы попробовать еще раз 🥹',\n  //     });\n  //   }\n  // }\n  async componentDidUpdate(_, prevState) {\n    const {\n      page,\n      search\n    } = this.state;\n\n    if (prevState.page !== page || prevState.search !== search) {\n      const nextImages = await fetchImages(search, page); //можем добавить картинки вниз\n      // this.setState(prevState => ({\n      //   images: [...prevState.images, ...nextImages.hits],\n      // }))\n\n      this.setState({\n        images: nextImages.hits\n      });\n    }\n  } //prevState.search !== search\n\n\n  render() {\n    const {\n      showModal,\n      isLoading,\n      error,\n      images\n    } = this.state;\n    console.log(images.length);\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: this.getVisiblImages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: this.toggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.activImg,\n          alt: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(ImageGallary, {\n        images: images,\n        onSwitchModal: this.handleModal,\n        onModal: this.toggleModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 35\n      }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(ButtonLoadMore, {\n        onLoadMore: this.loadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n} // fetchImages = async () => {\n//   const { query, page } = this.state;\n//   const perPage = 12;\n//   this.setState({ isLoading: true });\n//   await fetchImages(query, page, perPage)\n//     .then(({ hits, totalHits }) => {\n//       const totalPages = Math.ceil(totalHits / perPage);\n//       if (hits.length === 0) {\n//         return toast.error('Sorry, no images found. Please, try again!');\n//       }\n//       if (page === 1) {\n//         toast.success(`Hooray! We found ${totalHits} images.`);\n//       }\n//       if (page === totalPages) {\n//         toast.info(\"You've reached the end of search results.\");\n//       }\n//      this.setState(({ images }) => ({\n//         images: [...images, ...hits],\n//         // page: page + 1,\n//         total: totalHits,\n//       }));\n//     })\n//     .catch(error => this.setState({ error }))\n//     .finally(() => this.setState({ isLoading: false }));\n// };\n// // Принимаем с формы запрос и пишем в стейт + сбрасываем после отправки ключи из стейта\n// handleSearch = query => {\n//   if (query === this.state.query) return;\n//   this.setState({\n//     images: [],\n//     query,\n//     page: 1,\n//     error: null,\n//   });\n// };","map":{"version":3,"names":["React","Searchbar","Component","fetchImages","ImageGallary","Wrapper","ButtonLoadMore","Loader","Modal","App","state","images","error","isLoading","showModal","search","page","activImg","toggleModal","setState","getVisiblImages","value","handleModal","url","loadMore","prevState","componentDidUpdate","_","nextImages","hits","render","console","log","length"],"sources":["/Users/savostiny/Desktop/React.projects/React.goit-module3 /src/components/App.jsx"],"sourcesContent":["import React from \"react\";\nimport Searchbar from \"./Searchbar/Searchbar\";\nimport { Component } from 'react';\nimport { fetchImages } from 'api';\nimport { ImageGallary } from './ImageGallery/ImageGallary';\nimport { Wrapper } from \"./App.styled\";\nimport { ButtonLoadMore } from '../components/Button/Button';\nimport { Loader } from \"../components/Loader/Loader\";\nimport Modal from \"./Modal/Modal\";\n\n\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    error: '',\n    isLoading: false,\n    showModal: false,\n    search: '',\n    page: 1,\n    activImg: '',\n  };\n\n  // async componentDidMount() {\n  //   try {\n  //     this.setState({ isLoading: true });\n  //     const images = await fetchImages();\n  //     this.setState({\n  //       images: images.hits,\n  //       isLoading: false,\n  //     });\n  //   } catch (error) {\n  //     this.setState({\n  //       error:\n  //         'Мы не смогли загрузить картинки, пожалуйста перезагрузите страницу чтобы попробовать еще раз 🥹',\n  //     });\n  //   }\n  // }\n\n  async componentDidUpdate(_, prevState) {\n    const { page, search } = this.state\n    if (prevState.page !== page || prevState.search !== search\n    ) {\n\n      const nextImages = await fetchImages(search, page);\n      //можем добавить картинки вниз\n      // this.setState(prevState => ({\n      //   images: [...prevState.images, ...nextImages.hits],\n      // }))\n      this.setState({\n        images: nextImages.hits,\n      })\n    }\n  }\n  //prevState.search !== search\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }))\n  }\n\n  getVisiblImages = (value) => {\n    this.setState({\n      search: value\n    })\n  }\n\n  handleModal = (url) => {\n    this.setState({\n      activImg: url\n    })\n  }\n  loadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1\n    }))\n  }\n\n  render() {\n    \n    const { showModal, isLoading, error, images } = this.state;\n    console.log(images.length)\n    return (\n      <Wrapper>\n        {error && <p>{error}</p>}\n        <Searchbar onSearch={this.getVisiblImages} />\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={this.state.activImg} alt=\"name\" />\n          </Modal>\n        )}\n        {isLoading ? <Loader /> : <ImageGallary images={images} onSwitchModal={this.handleModal} onModal={this.toggleModal} />}\n        {images.length > 0 &&<ButtonLoadMore onLoadMore={this.loadMore} />}\n      </Wrapper>\n    );\n  }\n}\n\n// fetchImages = async () => {\n  \n//   const { query, page } = this.state;\n//   const perPage = 12;\n\n//   this.setState({ isLoading: true });\n  \n\n//   await fetchImages(query, page, perPage)\n//     .then(({ hits, totalHits }) => {\n//       const totalPages = Math.ceil(totalHits / perPage);\n\n//       if (hits.length === 0) {\n//         return toast.error('Sorry, no images found. Please, try again!');\n//       }\n\n//       if (page === 1) {\n//         toast.success(`Hooray! We found ${totalHits} images.`);\n//       }\n\n//       if (page === totalPages) {\n//         toast.info(\"You've reached the end of search results.\");\n//       }\n\n//      this.setState(({ images }) => ({\n//         images: [...images, ...hits],\n//         // page: page + 1,\n//         total: totalHits,\n//       }));\n\n//     })\n//     .catch(error => this.setState({ error }))\n//     .finally(() => this.setState({ isLoading: false }));\n\n// };\n\n// // Принимаем с формы запрос и пишем в стейт + сбрасываем после отправки ключи из стейта\n// handleSearch = query => {\n//   if (query === this.state.query) return;\n//   this.setState({\n//     images: [],\n//     query,\n//     page: 1,\n//     error: null,\n//   });\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}