{"ast":null,"code":"var _jsxFileName = \"/Users/savostiny/Desktop/CRA/src/App.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      isCounting: false\n    };\n    this.timerId = setInterval(() => {\n      console.log('Запущен инетрвал');\n      this.setState({\n        count: this.count += 1\n      });\n    });\n\n    this.handleStart = () => {\n      this.timerId();\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  componentWillUnmount() {} // function windowLoad() {\n  //   let digitsCounters = digitCountersItems ? digitCountersItems : document.querySelector('[data-digits-counter]');\n  //   if (digitsCounters) {\n  //     digitsCounters.forEach(el => {\n  //       digitsCountersAnimate(el);\n  //     })\n  //   }\n  // };\n  // function digitsCountersAnimate(digitsCouner) {\n  //   let startTimestamp = null;\n  //   const duration = 1000;\n  //   const startValue = parseInt(digitsCounter.innerHTML);\n  //   const startPosition = 0;\n  //   const step = (timestamp) => {\n  //     if (!startTimestamp) startTimestamp = timestamp;\n  //     const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n  //     digitsCouner.innerHTML = Math.floor(progress * (startPosition + startValue));\n  //     if (progress < 1) {\n  //       window.requestAnimationFrame(step);\n  //     }\n  //   }\n  //   window.requestAnimationFrame(step)\n  // };\n  // windowLoad();\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ClassName: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), !this.state.isCounting ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStart,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStop,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","App","Component","state","count","isCounting","timerId","setInterval","console","log","setState","handleStart","componentDidMount","componentDidUpdate","componentWillUnmount","render","handleStop","handleReset"],"sources":["/Users/savostiny/Desktop/CRA/src/App.jsx"],"sourcesContent":["import React from \"react\";\n\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n    isCounting: false,\n  };\n  timerId = setInterval(() => {\n    console.log('Запущен инетрвал')\n    this.setState({ count: this.count += 1 });\n  }\n  )\n  handleStart = () => {\n    this.timerId()\n  }\n\n  componentDidMount() { }\n\n  componentDidUpdate() { }\n\n  componentWillUnmount() { }\n\n\n\n  // function windowLoad() {\n  //   let digitsCounters = digitCountersItems ? digitCountersItems : document.querySelector('[data-digits-counter]');\n  //   if (digitsCounters) {\n  //     digitsCounters.forEach(el => {\n  //       digitsCountersAnimate(el);\n  //     })\n  //   }\n  // };\n\n\n  // function digitsCountersAnimate(digitsCouner) {\n  //   let startTimestamp = null;\n  //   const duration = 1000;\n  //   const startValue = parseInt(digitsCounter.innerHTML);\n  //   const startPosition = 0;\n  //   const step = (timestamp) => {\n  //     if (!startTimestamp) startTimestamp = timestamp;\n  //     const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n  //     digitsCouner.innerHTML = Math.floor(progress * (startPosition + startValue));\n  //     if (progress < 1) {\n  //       window.requestAnimationFrame(step);\n  //     }\n  //   }\n  //   window.requestAnimationFrame(step)\n  // };\n\n  // windowLoad();\n  render() {\n    return (\n      <div ClassName=\"App\">\n        <h1>React Timer</h1>\n        <h3>{this.state.count}</h3>\n        {!this.state.isCounting ? (\n          <button onClick={this.handleStart}>Start</button>\n        ) : (\n          <button onClick={this.handleStop}>Stop</button>\n        )}\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAChCC,KADgC,GACxB;MACNC,KAAK,EAAE,CADD;MAENC,UAAU,EAAE;IAFN,CADwB;IAAA,KAKhCC,OALgC,GAKtBC,WAAW,CAAC,MAAM;MAC1BC,OAAO,CAACC,GAAR,CAAY,kBAAZ;MACA,KAAKC,QAAL,CAAc;QAAEN,KAAK,EAAE,KAAKA,KAAL,IAAc;MAAvB,CAAd;IACD,CAHoB,CALW;;IAAA,KAUhCO,WAVgC,GAUlB,MAAM;MAClB,KAAKL,OAAL;IACD,CAZ+B;EAAA;;EAchCM,iBAAiB,GAAG,CAAG;;EAEvBC,kBAAkB,GAAG,CAAG;;EAExBC,oBAAoB,GAAG,CAAG,CAlBM,CAsBhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EACAC,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAK,KAAKZ,KAAL,CAAWC;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFF,EAGG,CAAC,KAAKD,KAAL,CAAWE,UAAZ,gBACC;QAAQ,OAAO,EAAE,KAAKM,WAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,gBAGC;QAAQ,OAAO,EAAE,KAAKK,UAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAQE;QAAQ,OAAO,EAAE,KAAKC,WAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AA9D+B;;AAiElC,eAAehB,GAAf"},"metadata":{},"sourceType":"module"}